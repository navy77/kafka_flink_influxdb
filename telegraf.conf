[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "localhost"
  omit_hostname = false

[[inputs.mqtt_consumer]]
  servers = ["192.168.0.162:1883"]
  topics = [
    "data/#",
    "status/#",
    "alarm/#"
  ]
  qos = 0
  connection_timeout = "30s"
  persistent_session = false
  client_id = ""
  data_format = "json"
  json_string_fields = ["status", "wos", "d_str1", "d_str2"]

[[outputs.kafka]]
  brokers = ["kafka-1:9092", "kafka-2:9093", "kafka-3:9094"]
  topic_tag = "kafka_topic"
  data_format = "json"

[[processors.starlark]]
  namepass = ["mqtt_consumer"]
  source = '''
def apply(metric):
  if "data" in metric.tags.get("topic", ""):
    metric.tags["kafka_topic"] = "topic_data"
  elif "status" in metric.tags.get("topic", ""):
    metric.tags["kafka_topic"] = "topic_status"
  elif "alarm" in metric.tags.get("topic", ""):
    metric.tags["kafka_topic"] = "topic_alarm"
  return metric
'''
